#Pythonでの予約語
"""
予約語と言って、関数名などに使用できない文字があります。
"""
False #真偽値 いいえ
True #真偽値 はい
None #空
and #aとb
as #aをbとして
assert #条件をチェックするデバッグツール Falseの時に例外が出る
break #ループから抜け出す
class #クラス
continue #ループの処理を最初から行う
def #同期関数
async def #非同期関数
await #コルーチン
del #指定要素を削除する
while #while文 指定条件に合う場合にループを続ける
if #条件式
elif #条件式 ifで当てはまらないかつ条件を指定したい時に使う
else #条件式に当てはまらない場合
try #エラーを成功として処理したい時に使う
except #try-exceptでエラーが発生した時
finally #try-exceptで成功失敗にかかわらず実行される
from #a から (b)
return #指定した要素を返す
in #aがbに入っている/ある
not #aがbでない
or #aかbか
is #aはb
pass #以下の処理を実行しない
import #ファイル/モジュールのインポート
raise #指定した例外を発生させる
with #開始と終了がセットになる文
global #グローバル変数の宣言
nonlocal #ローカルスコープを囲むスコープに存在する名前に対して、ローカルスコープから代入を行えるようにするもの
yield #ジェネレータを返す
lambda #ラムダ式 無名関数


#演算子の種類とか
"""
数学でお馴染みのあれ。
>= とか > とか = とか
"""
= #代入演算子 i = 0 とか
+=, -=, *=, /=, //=,
%=, >>=, <<=, &=, ^=, |= #累算代入演算子 右辺と左辺を演算して得られる結果を左辺に代入する
+, -, *, /, //, %, ** #算術演算子 加減乗除を行う
==, !=, >, >=, <, <=, is, is not, not in, not #ブール演算子
&, ^, | #ビット演算子
<<, >> #シフト演算子
i if 条件 else y #三項演算子 条件が成否に応じて演算結果を決定する演算子

== #aとbが等しいか
!= #aとbが等しくないか
> #左側が右側より大きいか
>= #左側が右側と一緒か大きいか
< #左側が右側より小さいか
<= #左側が右側より一緒か小さいか
is #二つのオブジェクトが同一か
is not #二つのオブジェクトが同一でないか
in #左側のものが右側に含まれているか
not in #左側のものが右側に含まれていないか


#advanced
"""
ファイルを実行するときに 
if __name__ == "__main__":
    #処理
を追加することで、ファイルがインポートされても下の処理は実行されなくなる
"""

def test():
    pass

if __name__ == "__main__":
    test()
